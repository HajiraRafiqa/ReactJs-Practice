What is React?
React is a declarative, efficient, flexible open source front-end JavaScript library developed by Facebook in 2011. 
It follows the component-based approach for building reusable UI components, especially for single page application. 
It is used for developing interactive view layer of web and mobile apps. It was created by Jordan Walke, a software engineer at Facebook. 
It was initially deployed on Facebook's News Feed section in 2011 and later used in its products like WhatsApp & Instagram.

The important features of React are:
It supports server-side rendering.
It will make use of the virtual DOM rather than real DOM (Data Object Model) as RealDOM manipulations are expensive.
It follows unidirectional data binding or data flow.
It uses reusable or composable UI components for developing the view.

What are the biggest limitations of React?
Following is the list of the biggest limitations of React:
React is just a library. It is not a complete framework.
It has a huge library which takes time to understand.
It may be difficult for the new programmers to understand and code.
React uses inline templating and JSX, which may be difficult and act as a barrier. It also makes the coding complex.

JSX stands for JavaScript XML. It allows us to write HTML inside JavaScript and place them in the DOM without using functions like appendChild( ) or createElement( ).
As stated in the official docs of React, JSX provides syntactic sugar for React.createElement( ) function.
Note- We can create react applications without using JSX as well.
JSX stands for JavaScript XML. It is a React extension which allows writing JavaScript code that looks similar to HTML. It makes HTML file easy to understand. 
The JSX file makes the React application robust and boosts its performance. 
JSX provides you to write XML-like syntax in the same file where you write JavaScript code, 
and then preprocessor (i.e., transpilers like Babel) transform these expressions into actual JavaScript code. 
Just like XML/HTML, JSX tags have a tag name, attributes, and children.

 Why can't browsers read JSX?
Browsers cannot read JSX directly because they can only understand JavaScript objects, and JSX is not a regular JavaScript object. Thus, we need to transform the JSX file into a JavaScript object using transpilers like Babel and then pass it to the browser.

